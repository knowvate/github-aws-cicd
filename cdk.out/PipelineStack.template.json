{
 "Resources": {
  "CodePipelineArtifactStore2354D54A": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "PipelineStack/CodePipelineArtifactStore/Resource"
   }
  },
  "PublicTestBucket730B0393": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": "pipelinestack-public-test-bucket",
    "VersioningConfiguration": {
     "Status": "Enabled"
    },
    "WebsiteConfiguration": {
     "ErrorDocument": "error.html",
     "IndexDocument": "index.html"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "PipelineStack/PublicTestBucket/Resource"
   }
  },
  "PreSignedUrlLambdaRoleC385A0D6": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PipelineStack/PreSignedUrlLambdaRole/Resource"
   }
  },
  "PreSignedUrlLambdaRoleDefaultPolicy0D1AB6E6": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "PublicTestBucket730B0393",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PreSignedUrlLambdaRoleDefaultPolicy0D1AB6E6",
    "Roles": [
     {
      "Ref": "PreSignedUrlLambdaRoleC385A0D6"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PipelineStack/PreSignedUrlLambdaRole/DefaultPolicy/Resource"
   }
  },
  "PreSignedUrlLambda5C2C2A4A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ZipFile": "import json\nimport boto3\nimport os\ndef lambda_handler(event, context):\n    bucket = os.environ.get('BUCKET_NAME')\n    key = event.get('key')\n    expires_in = int(event.get('expires_in', 86400))\n    s3 = boto3.client('s3')\n    url = s3.generate_presigned_url('get_object', Params={'Bucket': bucket, 'Key': key}, ExpiresIn=expires_in)\n    return {'statusCode': 200, 'body': json.dumps({'url': url})}"
    },
    "Environment": {
     "Variables": {
      "BUCKET_NAME": {
       "Ref": "PublicTestBucket730B0393"
      }
     }
    },
    "Handler": "index.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "PreSignedUrlLambdaRoleC385A0D6",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 30
   },
   "DependsOn": [
    "PreSignedUrlLambdaRoleDefaultPolicy0D1AB6E6",
    "PreSignedUrlLambdaRoleC385A0D6"
   ],
   "Metadata": {
    "aws:cdk:path": "PipelineStack/PreSignedUrlLambda/Resource"
   }
  },
  "CodeBuildServiceRoleA9C1F6A8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PipelineStack/CodeBuildServiceRole/Resource"
   }
  },
  "CodeBuildServiceRoleDefaultPolicyC1569022": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents",
        "s3:GetObject",
        "s3:GetObjectVersion",
        "s3:PutObject",
        "s3:GetBucketAcl",
        "s3:GetBucketLocation",
        "codebuild:BatchGetBuilds",
        "codebuild:StartBuild"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "CodeBuildProject4B91CF3F"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:",
           {
            "Ref": "AWS::Region"
           },
           ":",
           {
            "Ref": "AWS::AccountId"
           },
           ":log-group:/aws/codebuild/",
           {
            "Ref": "CodeBuildProject4B91CF3F"
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:CreateReportGroup",
        "codebuild:CreateReport",
        "codebuild:UpdateReport",
        "codebuild:BatchPutTestCases",
        "codebuild:BatchPutCodeCoverages"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:",
          {
           "Ref": "AWS::Region"
          },
          ":",
          {
           "Ref": "AWS::AccountId"
          },
          ":report-group/",
          {
           "Ref": "CodeBuildProject4B91CF3F"
          },
          "-*"
         ]
        ]
       }
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "CodePipelineArtifactStore2354D54A",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "CodePipelineArtifactStore2354D54A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CodeBuildServiceRoleDefaultPolicyC1569022",
    "Roles": [
     {
      "Ref": "CodeBuildServiceRoleA9C1F6A8"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PipelineStack/CodeBuildServiceRole/DefaultPolicy/Resource"
   }
  },
  "CodeBuildProject4B91CF3F": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "NO_ARTIFACTS"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "EncryptionKey": "alias/aws/s3",
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "Image": "aws/codebuild/standard:7.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": false,
     "Type": "LINUX_CONTAINER"
    },
    "ServiceRole": {
     "Fn::GetAtt": [
      "CodeBuildServiceRoleA9C1F6A8",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": "buildspec.yaml",
     "GitCloneDepth": 1,
     "Location": "https://github.com/knowvate/github-aws-cicd.git",
     "ReportBuildStatus": true,
     "Type": "GITHUB"
    },
    "SourceVersion": "main"
   },
   "Metadata": {
    "aws:cdk:path": "PipelineStack/CodeBuildProject/Resource"
   }
  },
  "CodePipelineServiceRole8DEB6B6A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codepipeline.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PipelineStack/CodePipelineServiceRole/Resource"
   }
  },
  "CodePipelineServiceRoleDefaultPolicyF140DAAD": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents",
        "s3:GetObject",
        "s3:GetObjectVersion",
        "s3:PutObject",
        "s3:GetBucketAcl",
        "s3:GetBucketLocation",
        "codebuild:BatchGetBuilds",
        "codebuild:StartBuild"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "CodePipelineArtifactStore2354D54A",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "CodePipelineArtifactStore2354D54A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CodePipelineBuildCodePipelineActionRoleD28C17CE",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CodePipelineServiceRoleDefaultPolicyF140DAAD",
    "Roles": [
     {
      "Ref": "CodePipelineServiceRole8DEB6B6A"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PipelineStack/CodePipelineServiceRole/DefaultPolicy/Resource"
   }
  },
  "CodePipelineB74E5936": {
   "Type": "AWS::CodePipeline::Pipeline",
   "Properties": {
    "ArtifactStore": {
     "Location": {
      "Ref": "CodePipelineArtifactStore2354D54A"
     },
     "Type": "S3"
    },
    "Name": "PipelineStack",
    "PipelineType": "V2",
    "RoleArn": {
     "Fn::GetAtt": [
      "CodePipelineServiceRole8DEB6B6A",
      "Arn"
     ]
    },
    "Stages": [
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Source",
         "Owner": "ThirdParty",
         "Provider": "GitHub",
         "Version": "1"
        },
        "Configuration": {
         "Owner": "knowvate",
         "Repo": "github-aws-cicd",
         "Branch": "main",
         "OAuthToken": "{{resolve:secretsmanager:GITHUB_ACCESS_TOKEN:SecretString:::}}",
         "PollForSourceChanges": false
        },
        "Name": "Source",
        "OutputArtifacts": [
         {
          "Name": "SourceCode"
         }
        ],
        "RunOrder": 1
       }
      ],
      "Name": "Source"
     },
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Build",
         "Owner": "AWS",
         "Provider": "CodeBuild",
         "Version": "1"
        },
        "Configuration": {
         "ProjectName": {
          "Ref": "CodeBuildProject4B91CF3F"
         }
        },
        "InputArtifacts": [
         {
          "Name": "SourceCode"
         }
        ],
        "Name": "Build",
        "OutputArtifacts": [
         {
          "Name": "BuildOutput"
         }
        ],
        "RoleArn": {
         "Fn::GetAtt": [
          "CodePipelineBuildCodePipelineActionRoleD28C17CE",
          "Arn"
         ]
        },
        "RunOrder": 1
       }
      ],
      "Name": "Build"
     }
    ]
   },
   "DependsOn": [
    "CodePipelineServiceRoleDefaultPolicyF140DAAD",
    "CodePipelineServiceRole8DEB6B6A"
   ],
   "Metadata": {
    "aws:cdk:path": "PipelineStack/CodePipeline/Resource"
   }
  },
  "CodePipelineSourceWebhookResourceE27B8B40": {
   "Type": "AWS::CodePipeline::Webhook",
   "Properties": {
    "Authentication": "GITHUB_HMAC",
    "AuthenticationConfiguration": {
     "SecretToken": "{{resolve:secretsmanager:GITHUB_ACCESS_TOKEN:SecretString:::}}"
    },
    "Filters": [
     {
      "JsonPath": "$.ref",
      "MatchEquals": "refs/heads/{Branch}"
     }
    ],
    "RegisterWithThirdParty": true,
    "TargetAction": "Source",
    "TargetPipeline": {
     "Ref": "CodePipelineB74E5936"
    },
    "TargetPipelineVersion": 1
   },
   "Metadata": {
    "aws:cdk:path": "PipelineStack/CodePipeline/Source/Source/WebhookResource"
   }
  },
  "CodePipelineBuildCodePipelineActionRoleD28C17CE": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CodePipelineServiceRole8DEB6B6A",
          "Arn"
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "PipelineStack/CodePipeline/Build/Build/CodePipelineActionRole/Resource"
   }
  },
  "CodePipelineBuildCodePipelineActionRoleDefaultPolicy828529E8": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "codebuild:BatchGetBuilds",
        "codebuild:StartBuild",
        "codebuild:StopBuild"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "CodeBuildProject4B91CF3F",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CodePipelineBuildCodePipelineActionRoleDefaultPolicy828529E8",
    "Roles": [
     {
      "Ref": "CodePipelineBuildCodePipelineActionRoleD28C17CE"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "PipelineStack/CodePipeline/Build/Build/CodePipelineActionRole/DefaultPolicy/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/03MTQvCMAwG4N+yexdnBb0reB7z4FG6NmK2rhnr6pDS/y77EDy9T/KGSJDFEYpMTT7Xps0t1RBvo9KtUJN/RH+AeA66xVFcnm5VEqQ6iBVbnJdLlmxJf+ZxVRJWdbVREK/B6ZHYzd3PSWg2WAeyBmI5cIN6+b9xrXvq0ZJDiOWm5eTPd6xfzG1KokLPYdCYhGOD0PjdW0rYn6DIGk+UD8GN1CFUa34BgjYITvYAAAA="
   },
   "Metadata": {
    "aws:cdk:path": "PipelineStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}